#sidebar,
.sidebar-popout {
	.sidebar-tab {
		.directory-footer {
			button.quest-log-btn {
				flex: 1 1 100%;
				margin: 0;
				margin-block-start: m("base");
			}
		}
	}
}

#forien-quest-log,
#forien-quest-log-form,
.forien-quest-preview {
	.window-content {
		@extend %window-content;
	}

	.window-header {
		a.help,
		a.copy-link,
		a.splash-image {
			@include size(space("button-sm"));

			i {
				margin-inline-end: 0;
			}
		}
	}

	.log-tabs,
	.quest-tabs {
		@extend %modal-tabs;

		.item {
			@include size(auto);
		}
	}

	.editor-edit {
		@extend %control-button;
		@include absolute(top space("base") right to-rem(12px));
		background-color: color("background-button");
	}

	form {
		display: flex;
		flex: 1 1 auto;
		flex-direction: column;
		height: 100%;
		padding: p("sm");
		position: relative;
	}
}

#forien-quest-log {
	.window-content {
		position: unset; // to get the tabs to float outside
	}

	.quest-log {
		gap: 0;
		padding: p("sm");

		.log-tabs {
			&.bookmarks {
				@include absolute(top to-rem(40px) left to-rem(-120px));
				background-color: color("background-lightest");
				border: b("border");
				border-inline-start: none;
				flex-wrap: wrap;
				width: to-rem(120px);

				.item {
					border-block-end: b("border");
					width: 100%;

					&:last-child {
						border-block-end: none;
					}
				}
			}
		}

		section.log-body {
			&.bookmarks .tab {
				h1 {
					margin-block-start: 0;
				}
			}

			.tab {
				gap: 0;

				h1 {
					@extend %h-tag;
					@extend %h3;
					border-block-end: b("primary");
					color: color("primary");
					margin-block-start: m("sm");
					padding: p("base");
				}

				.table table {
					thead {
						background: none;
						border: none;
						color: color("text");
						text-shadow: none;

						th {
							background-color: color("primary", 0.1);
							border-block-end: b("primary");
							padding: p("sm");
							text-align: left;

							&.actions-col {
								width: to-rem(120px);
							}

							&.sortable {
								&:hover {
									background-color: color("primary");
									color: color("text-lightest");
									cursor: pointer;
								}
							}
						}
					}

					tbody {
						tr {
							background: transparent;

							&:nth-of-type(even) {
								background-color: color("background-light", 0.1);
							}
						}
					}

					tr {
						height: auto;

						td {
							font-weight: normal;
							padding: p("base") p("sm");
							text-align: left;

							&.title {
								cursor: pointer;
								font-weight: normal;

								&:hover {
									color: color("primary");
									text-shadow: none;
								}

								> i {
									margin-inline-end: m("base");
								}

								> small {
									display: inline-block;
									margin: 0;
								}
							}

							&.actions {
								padding-inline-start: 0;

								> i {
									@extend %control-button;
									@extend %font-awesome;
									color: color("text");

									&:hover,
									&:focus {
										color: color("text-lightest");
									}

									&:first-child {
										margin-inline-start: 0;
									}
								}
							}

							img {
								@extend %reset-image;
								@include size(auto);
								max-height: to-rem(44px);
								max-width: to-rem(44px);
							}
						}
					}
				}
			}
		}
	}

	.new-quest-btn {
		@extend %primary-button;
		text-transform: capitalize;
	}
}

#forien-quest-log-form {
	.grid-container {
		gap: 0;
		grid-template-columns: 50% 50%;
		grid-template-rows: min-content 1fr minmax(88px, 200px) min-content;
		height: 100%;

		.footer {
			border-block-start: b("border");

			button {
				@extend %primary-button;
				margin-block-start: m("sm");
				width: 100%;
			}
		}

		fieldset {
			border: 0;
			color: color("text");
			margin: 0;
			padding: 0;
			padding-inline-end: p("sm");
			padding-block-end: p("sm");
			position: relative;

			&.giver-data-fieldset {
				align-items: center;
				justify-content: center;
				padding: 0;
				padding-block-end: p("sm");

				img,
				h3 {
					float: left;
				}

				img {
					@extend %reset-image;
					@include size(to-rem(64px));
					margin: 0;
				}

				h3 {
					@extend %h-tag;
					@extend %h4;
					@include ellipsis;
					line-height: to-rem(64px);
					margin-inline-start: m("sm");
					max-width: calc(100% - #{to-rem(72px)})
				}

				.drop-info {
					@include absolute(top 0 right 0 bottom space("sm") left 0);
					align-items: center;
					background-color: color("folder-header", 0.2);
					border: 1px dotted color("border");
					color: color("text");
					display: flex;
					font-size: fs("xl");
					font-variant: small-caps;
					justify-content: center;
					margin: 0;
					padding: 0 14%;
					opacity: 1;
					text-align: center;
					transform: initial;

					&.hidden {
						display: none;
					}
				}
			}

			&.tinymce-fieldset {
				height: 100%;
				padding: p("sm") 0;
				padding-inline-end: p("base");

				&:hover {
					.editor-edit{
						display: flex !important;
					}
				}

				label {
					border-block-end: b("border");
					margin-block-end: 0;
				}

				.editor {
					height: calc(100% - #{to-rem(13px)});
				}

				.editor-content {
					color: color("text");
					overflow-x: hidden;
					overflow-y: auto;
					padding: 0;
				}

				.editor-edit {
					@include absolute(top to-rem(-27px) right 0);
					display: none !important;
				}

				+ .tinymce-fieldset {
					background-color: color("folder-header", 0.2);
					padding-inline-start: p("base");
					padding-inline-end: 0;
				}
			}

			&.tasks {
				height: 100%;
				overflow: hidden;
				padding: 0;
				padding-block-end: p("sm");

				h2 {
					@extend %h-tag;
					@extend %h3;
					align-items: center;
					background-color: color("background-lightest");
					border-block-end: b("border");
					display: flex;
					height: to-rem(26px); // i hate doing this

					.add-new-task {
						@extend %primary-button;
						font-size: fs("sm");
						margin-inline-start: m("sm");
						padding: p("base");
						padding-block-end: p("xs");
						text-transform: capitalize;
					}
				}

				.list {
					@extend %reset-list;
					height: calc(100% - #{to-rem(26px)}); // to match header
					overflow-x: hidden;
					overflow-y: auto;
				}

				.task-entry {
					align-items: center;
					display: flex;
					margin-block-start: m("base");

					.del-btn {
						@extend %control-button;
						color: color("text");

						&:hover,
						&:focus {
							color: color("text-lightest");
						}
					}
				}
			}

			label {
				display: block;
				font-size: fs("lg");
				margin-block-end: m("xs");
			}

			input[type="text"] {
				@extend %input-text;

				+ label {
					margin-block-start: m("sm");
				}
			}
		}
	}
}

.forien-quest-preview {
	.quest-body {
		flex: 1 1 auto;
		height: calc(100% - #{to-rem(32px)});
	}

	.details-tab,
	.grid-container,
	.tasks-gc,
	.management {
		gap: 0;
	}

	.details {
		.details-tab {
			display: flex;
			flex-direction: column;
		}

		.details-header {
			align-items: center;
			border-block-end: b("border");
			display: flex;
			flex: 0 0 auto;
			overflow: hidden;
			padding-block-start: p("sm");
			padding-block-end: p("base");

			input[type="text"] {
				@extend %input-text;
			}

			h2 {
				@extend %h-tag;
				@extend %h3;
				@include ellipsis(max-width 100%);
				align-items: center;
				border: none;
				color: color("text");
				display: block;
				flex: 1 1 auto;
				position: sticky;
				top: 0;
				z-index: 1;

				small.quest-name {
					display: inline-block;
					font-size: fs("md");
					margin: 0;
				}
			}

			.actions {
				flex: 0 0 auto;
				margin-inline-start: m("sm");
				position: relative;
				right: auto;
				top: auto;

				> i {
					@extend %control-button;
					@extend %font-awesome;
					color: color("text");

					&:hover,
					&:focus {
						color: color("text-lightest");
					}

					&:first-child {
						margin-inline-start: 0;
					}
				}
			}
		}

		.grid-container {
			display: flex;
			flex-wrap: wrap;
			flex: 1 1 auto;
			height: 1px; // hack hack
		}

		.quest-giver-gc {
			display: flex;
			flex-direction: column;
			flex: 0 0 to-rem(124px);
			height: 50%;
			max-width: to-rem(200px);
			padding-block-start: p("base");
			padding-block-end: p("base");
			padding-inline-end: p("sm");

			> div {
				overflow: hidden;
				text-align: left;
			}

			img.open-actor-sheet {
				@extend %reset-image;
				@include size(100%, auto);
				border-radius: 0;
				max-height: to-rem(120px);
			}

			span.open-actor-sheet,
			span.quest-status {
				@include ellipsis;
				display: block;
				font-size: fs("md");
				text-align: left;
			}

			.quest-status {
				&.failed {
					color: color("negative");
				}

				&.completed {
					color: color("positive");
				}
			}

			.toggleImage {
				@extend %control-button;
				@extend %font-awesome;
				@include absolute(top 0 right 0);
				background-color: color("background-button");
				flex: 0 0 auto;
				margin: 0;
			}
		}

		.description-gc {
			flex: 1 1 50%;
			height: 50%;
			padding-block-start: p("base");
			padding-block-end: p("base");
			padding-inline-start: p("sm");

			&:hover {
				.editor-edit{
					display: flex !important;
				}
			}

			.editor {
				height: calc(100% - #{to-rem(32px)});
			}

			.editor-content {
				color: color("text");
				overflow-x: hidden;
				overflow-y: auto;
				padding: 0;

				> p:first-child {
					margin-block-start: 0;
				}
			}

			.editor-edit {
				display: none !important;
			}
		}

		.tasks-gc {
			display: flex;
			flex: 1 1 60%;
			flex-direction: column;
			height: 50%;
			padding-inline-end: p("sm");

			h3 {
				@extend %h-tag;
				@extend %h4;
				align-items: center;
				border-block-end: b("primary");
				color: color("primary");
				display: flex;
				flex: 0 0 auto;
				padding-block-end: p("base");
				z-index: 1;

				.add-new-task {
					@extend %primary-button;
					font-size: fs("sm");
					margin-inline-start: m("sm");
					padding: p("base");
					padding-block-end: p("xs");
					text-transform: capitalize;
				}
			}

			.tasks-box {
				@extend %reset-list;
				height: 1px; // hacky hack
				flex: 1 1 auto;
				padding-block-start: p("base");
				overflow-x: hidden;
				overflow-y: auto;
			}

			.task {
				align-items: center;
				display: flex;
				margin: 0;
				padding: p("xs") 0;

				input {
					@extend %input-text;
					height: auto;
					left: auto;
					padding: p("base");
					position: relative;
					top: auto;
				}

				> i {
					left: auto;
					margin-inline-end: m("base");
					position: relative;
					top: auto;
				}

				.state-container {
					@include size(to-rem(16px));
					align-items: center;
					display: inline-flex;
					font-size: fs("lg");
					justify-content: center;
					margin: 0 m("base");

					> i {
						@include absolute(top 0 left 0);
						font-size: fs("lg");
						opacity: 1;

						&.state.fa-check {
							color: color("positive");
							font-size: to-rem(10px);
							left: to-rem(2px);
							top: to-rem(3px);
						}

						&.state.fa-times {
							color: color("negative");
							font-size: to-rem(11px);
							left: to-rem(3px);
							top: to-rem(2px);
						}
					}

					+ span {
						margin-inline-start: m("base");
					}
				}

				.quest-name {
					cursor: pointer;
					font-size: fs("md");
					font-weight: normal;

					&:hover {
						color: color("primary");
					}
				}

				.editable-container {
					flex: 1 1 auto;
					margin: 0;
					margin-inline-end: m("base");

					.task-name {
						margin-inline-start: m("base");

						&:only-child {
							margin-inline-start: 0;
						}
					}
				}

				.toggleState,
				.del-btn,
				.toggleHidden {
					@extend %control-button;
					@extend %font-awesome;
					color: color("text");
					flex: 0 0 auto;
					margin: 0;

					&:hover,
					&:focus {
						color: color("text-lightest");
					}
				}
			}
		}

		.rewards-gc {
			display: flex;
			flex: 1 1 40%;
			flex-direction: column;
			height: 50%;
			padding-inline-start: p("sm");

			h3 {
				@extend %h-tag;
				@extend %h4;
				align-items: center;
				border-block-end: b("primary");
				color: color("primary");
				display: flex;
				flex: 0 0 auto;
				padding-block-end: p("base");

				small {
					@extend %control-button;
					@include size(auto);
					color: color("text");
					flex: 0 0 auto;
					margin: 0;
					margin-inline-start: m("base");
					padding: p("base");

					&:hover,
					&:focus {
						color: color("text-lightest");
					}

					i {
						opacity: 1;
					}
				}
			}

			.rewards-box {
				@extend %reset-list;
				flex: 1 1 auto;
				height: 1px; // hacky hack
				overflow-x: hidden;
				overflow-y: auto;
				padding-block-start: p("base");

				.drop-info {
					@include absolute(zero);
					align-items: center;
					bottom: space("sm");
					color: color("text");
					cursor: pointer;
					display: flex;
					font-size: fs("xl");
					font-variant: small-caps;
					justify-content: center;
					margin: 0;
					padding: 0 14%;
					opacity: 1;
					text-align: center;
					transform: initial;

					&.hidden {
						display: none;
					}
				}

				.reward {
					align-items: center;
					display: flex;
					margin: 0;
					padding: p("xs") 0;

					input {
						@extend %input-text;
						height: auto;
						left: auto;
						padding: p("base");
						position: relative;
						top: auto;
					}

					img {
						@extend %reset-image;
						@include size(auto);
						flex: 0 0 auto;
						margin-inline-end: m("base");
						max-height: to-rem(24px);
						max-width: to-rem(24px);
					}

					.name {
						display: block;
						flex: 1 1 auto;
						line-height: initial;
						margin: 0;
						margin-inline-start: m("base");
						margin-inline-end: m("sm");
					}

					.del-btn,
					.toggleHidden {
						@extend %control-button;
						@extend %font-awesome;
						color: color("text");
						flex: 0 0 auto;
						margin: 0;

						&:hover,
						&:focus {
							color: color("text-lightest");
						}
					}
				}
			}
		}
	}

	.management {
		flex-wrap: wrap;

		&.active {
			display: flex;
		}

		.part {
			flex: 0 0 50%;
			height: 50%;
			overflow: hidden;

			input[type="checkbox"] {
				@extend %input-checkbox;
				flex: 0 0 auto;
				margin-inline-end: m("base");
			}

			&.personal-quest {
				display: flex;
				flex-direction: column;
				padding-block-start: p("sm");
				padding-inline-end: p("base");

				.quest-is-personal {
					align-items: center;
					display: flex;
					flex: 0 0 auto;
					flex-wrap: wrap;

					label {
						@include ellipsis;
						color: color("text");
						flex: 1 1 auto;
						font-size: fs("lg");
					}

					small {
						color: color("text");
						flex: 0 0 100%;
						font-size: fs("sm");
						margin-block-start: m("base");
					}
				}

				.user-column-container {
					@include size(auto);
					flex: 1 1 auto;
					overflow-x: hidden;
					overflow-y: auto;
					padding-block-start: p("sm");

					.user-columns {
						padding: initial;
						columns: initial;
						overflow-y: initial;
						overflow-x: initial;
						column-fill: initial;
					}

					.users {
						display: flex;
						flex-wrap: wrap;
						height: auto;

						&.disabled {
							pointer-events: none;
						}
					}

					.user {
						display: flex;
						flex: 0 0 50%;
						overflow: hidden;
						padding-block-end: p("base");
						padding-inline-end: p("base");

						label {
							@include ellipsis;
							color: color("text");
							flex: 1 1 auto;
							font-size: fs("md");
						}
					}
				}
			}

			&.subquests {
				display: flex;
				flex-direction: column;
				padding-block-start: p("sm");
				padding-inline-end: p("base");

				.label {
					@extend %h-tag;
					@extend %h4;
					align-items: center;
					border-block-end: b("primary");
					color: color("primary");
					display: flex;
					flex: 0 0 auto;
					padding-block-end: p("base");
				}

				.subquests-box {
					@extend %reset-list;
					height: 1px; // hacky hack
					flex: 1 1 auto;
					padding-block-start: p("base");
					overflow-x: hidden;
					overflow-y: auto;

					.subquest {
						align-items: center;
						display: flex;
						margin: 0;
						padding: p("xs") 0;

						.quest-name {
							@include ellipsis;
							color: color("text");
							flex: 1 1 auto;
							font-size: fs("md");
							font-weight: normal;

							&:hover {
								color: color("primary");
							}
						}

						.actions {
							flex: 0 0 auto;

							> i {
								@extend %control-button;
								@extend %font-awesome;
								color: color("text");

								&:hover,
								&:focus {
									color: color("text-lightest");
								}
							}
						}
					}
				}

				.add-subquest-btn {
					@extend %primary-button;
					flex: 0 0 auto;
					margin-block-start: m("sm");
				}
			}

			&.quest-splash {
				display: flex;
				flex-direction: column;
				padding-block-start: p("sm");
				padding-inline-start: p("base");

				.label {
					@extend %h-tag;
					@extend %h4;
					align-items: center;
					border-block-end: b("primary");
					color: color("primary");
					display: flex;
					flex: 0 0 auto;
					padding-block-end: p("base");
				}

				.splash-img {
					@extend %reset-image;
					cursor: pointer;
					max-height: 100%;
					max-width: 100%;

					&:hover {
						@extend %global-hover-alt;
					}
				}
			}

			&.other {
				padding-block-start: p("sm");
				padding-inline-start: p("base");

				> div {
					align-items: center;
					display: flex;
				}
			}
		}
	}

	.gmnotes {
		.editor-content {
			overflow-y: auto;
		}
	}
}
