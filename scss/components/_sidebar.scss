#sidebar,
.sidebar-popout {
	@include fixed(top space(sm) right 0);
	@include size(to-rem(320px), calc(100% - #{to-rem(16px)}));
	background: color("charcoal-900", 0.8);
	border: b("border");
	border-inline-end: none;
	border-radius: 0;
	box-shadow: none;
	display: flex;
	flex-direction: column;
	margin: 0;
	overflow: hidden;
	z-index: z(fixed);

	.-compact & {
		@include size(to-rem(296px), calc(100% - #{to-rem(8px)}));
		top: space("base");
	}

	&.collapsed {
		height: auto !important;
		width: to-rem(32px) !important;

		#sidebar-tabs {
			flex-wrap: wrap;
		}

		.sidebar-tab,
		.sidebar-tab.active {
			display: none;
		}
	}

	#sidebar-tabs {
		border-block-end: b("border");
		display: flex;
		flex: 0 0 auto;
		flex-wrap: nowrap;
		font-size: fs("sm");
		position: relative;
		transition: t(background box-shadow color, "link");

		> .item,
		> .collapse {
			align-items: center;
			color: color("white");
			cursor: pointer;
			display: flex;
			flex: 1 1 20%;
			justify-content: center;
			padding: p("sm");
			position: relative;
			transition: t(box-shadow color, "link");

			.-compact & {
				padding: p("base");
			}

			&:hover {
				@extend %global-hover;
			}

			&.active {
				@extend %global-active;
			}

			> i {
				position: relative;
				z-index: z("above");
			}

			.notification-pip {
				@keyframes notification-flash {
					0% { background-color: color("primary", 0); }
					50% { background-color: color("primary"); }
					100% { background-color: color("primary", 0); }
				}

				@include absolute(zero);
				animation-duration: time("x-slow");
				animation-iteration-count: infinite;
				animation-name: notification-flash;
				animation-timing-function: map-get($_default-transitions, "shift");
				background-color: color("primary", 0);
				display: none;
				z-index: 0;

				&::before {
					display: none;
				}
			}
		}
	}

	.window-content .sidebar-tab {
		display: flex;
	}

	// Eventually Make Global
	// Folders
	.folder {
		@extend %folder;
	}

	.sidebar-tab {
		display: none;
		flex: 1 1 auto;
		flex-direction: column;
		height: 100%;
		min-height: to-rem(200px);
		position: relative;

		.-compact & {
			min-height: to-rem(176px);
		}

		&.active {
			display: flex;
		}

		.directory-header,
		.directory-footer {
			@extend %panel-block;
		}

		.directory-header {
			border-block-end: b("border");

			.header-search {
				align-items: center;
				display: flex;
				flex: 1 1 auto;
				position: relative;

				> i {
					flex: 0 0 auto;
					margin-inline-end: m("sm");

					.-compact & {
						margin-inline-end: m("base");
					}
				}

				input {
					background: color("white");
					flex: 1 1 auto;
				}
			}

			.header-control {
				@extend %secondary-button;
				@include size(to-rem(32px));
				flex: 0 0 auto;
				margin-inline-start: m("base");

				.-compact & {
					margin-inline-start: m("xs");
				}
			}
		}

		.directory-footer {
			border-block-start: b("border");
			flex-wrap: wrap;

			button {
				@extend %primary-button;
				@extend %button-row;
				@extend %button-icon;
				@include ellipsis;
				flex: 1 1 48%;
				width: auto;
			}
		}
	}

	> .directory-list {
		display: flex;
		flex-direction: column;
	}

	.directory-list {
		@extend %directory-list;
		max-height: 100%;
		padding-block-start: p("base");

		.subdirectory {
			display: flex;
			flex-direction: column;
			background: color("charcoal-100");
			border-inline-start: b("primary", 4px);
			width: 100%;

			.directory-item.folder {
				padding-block-end: p("base");
				padding-inline-end: 0;

				.-compact & {
					padding-block-end: p("base");
					padding-inline-end: 0;
				}

				+ .directory-item.folder {
					padding-block-start: 0;

					.-compact & {
						padding-block-start: 0;
					}
				}

				+ .directory-item:not(.folder) {
					margin-block-start: 0;

					.-compact & {
						margin-block-start: 0;
					}
				}
			}

			.directory-item:not(.folder) {
				+ .directory-item:not(.folder) {
					margin-block-start: 0;

					.-compact & {
						margin-block-start: 0;
					}
				}
			}

			.subdirectory {
				border-inline-start: b("orange-700", 4px);

				.subdirectory {
					border-inline-start: b("orange-900", 4px);
				}
			}
		}
	}

	.directory-item {
		@extend %directory-item;
	}

	// Specific Tabs
	// 2.Combat
	#combat {
		#combat-round {
			@extend %panel-block;
			flex-direction: column;

			.encounters {
				align-items: center;
				display: flex;
				flex-wrap: nowrap;
				width: 100%;

				+ .encounters {
					margin-block-start: m("base");
				}

				h3,
				h4 {
					@extend %h-tag;
					@include ellipsis;
					border-block-end: none;
					color: color("gray-200");
					display: block;
					flex: 1 1 auto;
					font-size: fs("md");
					margin-inline-start: m("base");
					text-align: center;
				}

				h3 {
					color: color("white");
					font-size: fs("xl");

					.-compact & {
						font-size: fs("lg");
					}
				}

				a {
					@extend %control-button;

					&[disabled] {
						pointer-events: none;
						visibility: hidden;
					}

					&:first-child {
						margin-inline-start: 0;
					}
				}
			}
		}

		#combat-tracker {
			padding-block-start: p("base");

			.-compact & {
				padding-block-start: 0;
			}

			.combatant {
				align-items: center;
				background: color("border");
				display: flex;
				margin: m("base") m("sm");
				padding: p("base") p("sm");
				position: relative;
				transition: t(background box-shadow opacity, "link");

				.-compact & {
					margin: m("base");
					padding: p("base");
				}

				&:hover {
					@extend %global-hover;
				}

				&.hidden {
					.token-name h4,
					.token-image {
						opacity: 0.5;
					}
				}

				&.active {
					@extend %global-active;

					.combatant-control.active {
						background: color("white");
						color: color("primary");
					}
				}

				&.defeated {
					background: color("red-600", 0.5);

					&.active {
						.combatant-control.active {
							background: color("primary");
							color: color("white");
						}
					}
				}

				.token-image {
					@include size(space("icon"));
					cursor: default;
					flex: 0 0 auto;
					margin-inline-end: m("sm");
					position: relative;

					.-compact & {
						margin-inline-end: m("base");
					}
				}

				.token-name {
					display: flex;
					flex: 1 1 auto;
					flex-direction: column;
					overflow: hidden;
					position: relative;

					h4 {
						@extend %h-tag;
						@include ellipsis(max-width 100%);
						color: color("white");
						font-size: fs("lg");
					}
				}

				.token-resource,
				.token-initiative {
					align-items: center;
					color: color("white");
					display: flex;
					flex: 0 0 auto;
					position: relative;
				}

				.token-resource {
					font-size: fs("md");
					margin-inline-start: m("base");
					padding-inline-end: p("sm");

					.-compact & {
						padding-inline-end: p("base");
					}
				}

				.token-initiative {
					border-inline-start: b("gray-200");
					padding-inline-start: p("sm");

					.-compact & {
						padding-inline-start: p("base");
					}

					.initiative {
						color: inherit;
						font-size: fs("lg");
					}
				}

				.combatant-controls {
					align-items: center;
					display: flex;
				}

				.combatant-control {
					@extend %control-button;
					margin-inline-start: 0;
					margin-inline-end: m("base");

					// fa hack
					&.roll {
						@include size(space("button"));
						font-family: "Font Awesome 5 Free";
						font-weight: 900;
						-webkit-font-smoothing: antialiased;
						font-size: fs("xl");
						font-style: normal;
						font-variant: normal;
						text-rendering: auto;
						line-height: 1;
						margin: 0;

						&::before {
							content: "\f6cf";
						}
					}
				}

				.token-effects {
					display: flex;
					flex: 1 1 auto;
					flex-wrap: wrap;
					margin-inline-start: m("base");

					img {
						cursor: default;
						margin-block-end: m("base");
						margin-inline-end: m("base");
						max-height: to-rem(14px);
						max-width: to-rem(14px);
					}
				}
			}
		}

		#combat-controls {
			border-block-start: b("border");
			padding-block-start: m("sm");

			.-compact & {
				padding-block-start: m("base");
			}

			.combat-control {
				@extend %primary-button;
				flex: 1 1 auto;
				margin-inline-start: m("xs");

				&:first-child {
					margin-inline-start: 0;
				}

				&.center {
					flex: 1 1 50%;
				}
			}
		}
	}
	// 3.Scenes
	#scenes {
		.scene {
			background-image: none !important; // my sin
		}
	}

	// 8.Playlist
	#playlists {
		color: color("white");

		.directory-list {
			padding-block-start: 0;
			position: relative;

			> .playlist:first-child {
				background: color("charcoal-500", 0.5);
				border-block-end: b("border");
				color: color("white");
				display: flex;
				flex: 0 0 auto;
				flex-direction: column;
				padding: p("sm");
				position: relative;

				.-compact & {
					padding: p("base");
				}

				.playlist-header {
					background: transparent;
					border-block-end: b("border");
					color: color("white");
					font-size: fs("xl");
					padding-inline-start: 0;
					pointer-events: none;
					width: 100%;

					.-compact & {
						font-size: fs("lg");
					}

					h4 {
						padding-inline-start: 0;
					}
				}

				.playlist-sounds {
					background: transparent;
					border-inline-start: none;
					padding: 0;
					padding-block-start: p("base");
					width: 100%;

					h4 {
						@extend %h-tag;
						border-block-end: 0;
						color: color("white");
						font-size: fs("lg");

						+ input[type="range"] {
							margin-inline-start: m("base");
						}
					}

					.sound {
						border-block-end: 0;
						flex-wrap: nowrap;
						padding-inline-start: 0;
						padding-inline-end: 0;

						&:last-of-type {
							padding-block-end: 0;
						}

						.global-volume {
							flex: 0 0 50%;
						}
					}
				}
			}
		}

		li.playlist {
			display: block;
			padding-block-start: p("base");
			padding-inline-start: p("sm");
			padding-inline-end: p("sm");
			position: relative;

			.-compact & {
				padding-inline-start: p("base");
				padding-inline-end: p("base");
			}

			&:first-child {
				padding-block-start: p("sm");

				.-compact & {
					padding-block-start: p("base");
				}
			}

			&.collapsed {
				.playlist-header {
					border-inline-start: none;
				}

				.playlist-sounds {
					display: none;
				}
			}

			.playlist-header {
				align-items: center;
				background: color("charcoal-200");
				color: color("default-text");
				cursor: pointer;
				border-radius: 0;
				display: flex;
				flex-wrap: nowrap;
				min-height: to-rem(32px);
				padding: p("base") p("sm");
				position: relative;
				transition: t(background box-shadow color, "link");

				.-compact & {
					min-height: to-rem(24px);
					padding: p("base");
				}

				&:hover {
					background: color("primary");
					box-shadow: inset 0 0 0 2px color("white");
					color: color("white");
				}

				&:focus {
					box-shadow:
						inset 0 0 0 2px color("primary"),
						inset 0 0 0 3px color("white"), 0 1px 2px 0 color("black", 0.3);
				}

				h4 {
					@extend %h-tag;
					@include ellipsis;
					border-block-end: 0;
					color: inherit;
					cursor: pointer;
					display: block;
					flex: 1 1 auto;
					font-size: fs("lg");
					padding-inline-start: p("md");

					i.fa {
						@include absolute(top 50% left 0);
						color: inherit;
						margin-block-start: to-rem(-8px);
					}
				}
			}

			.playlist-sounds {
				@extend %reset-list;
				background: color("charcoal-100");

				.sound {
					align-items: center;
					border-block-end: b("charcoal-600");
					display: flex;
					flex-wrap: wrap;
					padding: p("base") p("sm");
					position: relative;

					.-compact & {
						padding: p("base");
					}

					h4 {
						@extend %h-tag;
						@include ellipsis;
						color: color("default-text");
						flex: 1 1 auto;
						font-size: fs("lg");

						.-compact & {
							font-size: fs("md");
						}
					}

					.sound-control {
						color: color("default-text");

						&.disabled {
							color: color("gray-100");
							display: none;
							pointer-events: none;
						}

						&[data-action="sound-repeat"] {
							color: color("primary");
						}

						&.inactive {
							color: color("gray-500");
						}

						&[data-action="sound-play"] {
							color: color("positive");

							&:hover,
							&:focus {
								background: color("positive");
							}
						}

						&[data-action="sound-stop"] {
							color: color("negative");

							&:hover,
							&:focus {
								background: color("negative");
							}
						}

						&:hover,
						&:focus {
							color: color("white");
						}
					}
				}
			}

			.playlist-controls {
				display: flex;
				flex: 0 0 auto;

				.sound-control {
					&.disabled {
						color: color("gray-100");
						display: none;
						pointer-events: none;
					}
				}
			}

			.sound-controls {
				align-items: center;
				display: flex;
				flex: 0 0 100%;
				flex-wrap: nowrap;
				position: relative;

				input {
					flex: 1 1 100%;
					margin-inline-start: m("base");
					position: relative;
				}
			}

			.sound-control {
				@extend %control-button;

				&:first-child {
					margin-inline-start: 0;
				}
			}
		}
	}

	// 9. Compendium
	#compendium {
		.compendium-entity {
			@extend %reset-list;
			padding: p("base") p("sm");
			width: 100%;

			.-compact & {
				padding: p("base");
			}

			> h3 {
				@extend %h-tag;
				@include ellipsis;
				align-items: center;
				background: color("charcoal-200");
				color: color("default-text");
				display: flex;
				flex: 1 1 auto;
				flex-wrap: nowrap;
				font-size: fs("lg");
				min-height: to-rem(32px);
				padding: p("base") p("sm");
				transition: t(background box-shadow color, "link");
				width: 100%;

				.-compact & {
					min-height: to-rem(24px);
					padding: p("base");
				}
			}

			> .compendium-list {
				@extend %reset-list;
				background: color("charcoal-100");
				display: flex;
				flex-direction: column;
				width: 100%;

				.compendium-pack {
					align-items: center;
					background: color("charcoal-400");
					color: color("white");
					cursor: pointer;
					flex-wrap: wrap;
					margin: m("base");
					margin-block-end: 0;
					min-height: to-rem(32px);
					padding: p("base") p("sm");
					position: relative;
					transition: t(background box-shadow color, "link");

					.-compact & {
						min-height: to-rem(24px);
						padding: p("base");
					}

					&:last-child {
						margin-block-end: m("base");
					}

					&:hover {
						@extend %global-hover;
						background: color("primary");
						color: color("white");
					}

					&:focus {
						@extend %global-focus;
					}

					h4 {
						@extend %h-tag;
						color: color("white");
						display: flex;
						font-size: fs("lg");
						width: 100%;

						a {
							@include ellipsis;
							align-items: center;
							display: flex;
							flex: 1 1 auto;
							margin-inline-end: m("sm");
							text-shadow: none;

							.-compact & {
								margin-inline-end: m("base");
							}

							.folder {
								padding: 0;
								margin-inline-end: m("base");
								width: auto;
							}
						}

						.status-icons {
							flex: 0 0 auto;

							> i {
								padding: p("xs");
								font-size: fs("md");
							}
						}
					}

					.compendium-footer {
						@include ellipsis;
						width: 100%;
					}
				}
			}
		}
	}

	// 10. Settings
	#settings {
		padding: p("sm");

		.-compact & {
			padding: p("base");
		}

		h2,
		h4 {
			@extend %h-tag;
			color: color("white");
			margin-block-end: m("sm");

			.-compact & {
				margin-block-end: m("base");
			}
		}

		h2 {
			border-block-end: b("charcoal-600");
			font-size: fs("xxl");
			margin-block-start: m("sm");

			.-compact & {
				font-size: fs("xl");
				margin-block-start: m("base");
			}
		}

		h4 {
			color: color("primary");
			font-size: fs("lg");

			.-compact & {
				margin-block-start: m("base");
			}
		}

		button {
			@extend %primary-button;
			@extend %button-icon;
			margin-block-end: m("base");
		}
	}
}

.sidebar-popout {
	@include absolute(top auto bottom auto right auto left auto);
	height: auto;
	min-height: to-rem(400px);
}
