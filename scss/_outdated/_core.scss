@import "base";
@import "base-controls";

*::before,
*::after {
	box-sizing: border-box;
}

// start vtt wrapper
html.e-html body.e-body#e-rd {

// Foundry Logo
#logo {
	display: none;
}

// Scene Navigation
#navigation {
	@include fixed(top space("md") left to-rem(156px));
	width: calc(100% - #{to-rem(520px)});
	z-index: z("fixed");

	#nav-toggle {
		@extend %control-button;
		@include absolute(top 0 left to-rem(-32px));
		background: color("charcoal-500", 0.8);
	}

	#scene-list {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0;
		padding: 0;
		position: relative;

		.scene {
			margin-block-end: space("sm");
			margin-inline-end: space("sm");
			position: relative;

			&:last-of-type {
				margin-inline-end: 0;
			}

			&.active,
			&.view {
				.scene-name {
					@extend %global-active;
				}
			}

			&.view {
				.scene-name {
					@extend %global-focus;
				}
			}
		}
	}

	.scene-players {
		@include absolute(top 0 left 0);
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0;
		margin-block-start: -(m("base"));
		padding: 0;
		padding-inline-start: m("sm");
		pointer-events: none;
	}

	.scene-player {
		@include size(to-rem(12px));
		align-items: center;
		background: color("white");
		border-radius: 50%;
		box-shadow:
			inset 0 0 0 1px color("primary"),
			inset 0 0 0 2px color("white"), 0 1px 2px 0 color("black", 0.3);
		color: transparent;
		display: flex;
		font-size: fs("xs");
		justify-content: center;
		margin-block-end: m("xs");
		margin-inline-end: m("xs");
		position: relative;
		text-transform: uppercase;
	}

	.scene-name {
		@include ellipsis;
		@include size(auto, to-rem(40px));
		background: color("charcoal-900", 0.8);
		color: color("white");
		cursor: pointer;
		display: block;
		line-height: to-rem(40px);
		max-width: to-rem(240px);
		min-width: to-rem(112px);
		padding: 0 p("md");
		position: relative;
		text-align: center;
		transition: t(box-shadow color, "link");

		&:hover {
			@extend %global-hover;
		}

		&:focus {
			@extend %global-focus;
		}

		> i {
			margin-inline-end: m("base");
		}
	}
}

// Loading Bar
#loading {
	@include fixed(top space("lg") left to-rem(156px));
	@include size(calc(100% - #{to-rem(600px)}), to-rem(24px));
	display: none;
	background: color("charcoal-500", 0.8);
	pointer-events: none;
	z-index: z("fixed");

	&::after {
		@include absolute(zero);
		box-shadow: inset 0 0 0 1px color("white"), 0 1px 2px 0 color("black", 0.3);
		content: "";
	}

	#loading-bar {
		background: color("primary");
		height: 100%;
		min-width: 25%;
		position: relative;
	}

	label {
		@include absolute(top 0);
		align-items: center;
		color: color("white");
		display: flex;
		height: 100%;
		font-size: fs("md");
		margin: 0 m("md");

		&#context {
			left: 0;
		}

		&#progress {
			right: 0;
		}
	}
}

// Scene Controls
#controls {
	@include fixed(top space("md") left space("md"));
	list-style: none;
	margin: 0;
	padding: 0;
	z-index: z("fixed");

	.scene-control,
	.control-tool {
		@include size(to-rem(40px));
		align-items: center;
		color: color("white");
		cursor: pointer;
		display: flex;
		justify-content: center;
		margin-block-end: space("sm");
		position: relative;
		transition: t(background box-shadow color, "link");

		&:hover {
			@extend %global-hover;
		}

		&:focus {
			@extend %global-focus;
		}

		&.active {
			@extend %global-active;
			@extend %global-hover;
		}

		&:last-of-type {
			margin-block-end: 0;
		}

		> i {
			margin: 0;
			position: relative;
		}
	}

	.scene-control {
		background: color("charcoal-900", 0.8);

		&.active .control-tools {
			display: block;
		}
	}

	.control-tool {
		background: color("charcoal-500", 0.8);

		&.toggle {
			background: color("white");
			color: color("default-text");

			&:hover {
				@extend %global-hover;
				background: color("green-500");
				color: color("white");
			}

			&:focus {
				@extend %global-focus;
			}

			&.active {
				@extend %global-active;
				background: color("green-500");
			}
		}
	}

	.control-tools {
		@include absolute(top 0 left to-rem(48px));
		display: none;
	}
}

// Notifications

// Sidebar
#sidebar {
	@include fixed(top space(md) right 0);
	@include size(to-rem(320px), calc(100% - #{to-rem(32px)}));
	background: color("charcoal-900", 0.8);
	border: b("charcoal-600");
	border-inline-end: none;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	z-index: z(fixed);

	#sidebar-tabs {
		border-block-end: b("charcoal-600");
		display: flex;
		flex: 0 0 auto;
		font-size: fs("sm");
		position: relative;
		transition: t(background box-shadow color, "link");

		> .item,
		> .collapse {
			align-items: center;
			color: color("white");
			cursor: pointer;
			display: flex;
			flex: 1 1 20%;
			justify-content: center;
			padding: p("sm");
			position: relative;
			transition: t(box-shadow color, "link");

			&:hover {
				@extend %global-hover;
			}

			&.active {
				@extend %global-active;
			}

			> i {
				position: relative;
				z-index: z("above");
			}

			.notification-pip {
				@keyframes notification-flash {
					0% { background-color: color("primary", 0); }
					50% { background-color: color("primary"); }
					100% { background-color: color("primary", 0); }
				}

				@include absolute(zero);
				animation-duration: time("x-slow");
				animation-iteration-count: infinite;
				animation-name: notification-flash;
				animation-timing-function: map-get($_default-transitions, "shift");
				background-color: color("primary", 0);
				display: none;
				z-index: 0;

				&::before {
					display: none;
				}
			}
		}

		> .collapse {
			@include absolute(top 0 right 0);
			display: none;
		}
	}
}

// Players Connected
#players {
	@include fixed(bottom space("md") left space("md"));
	background: color("charcoal-500", 0.8);
	border: b("charcoal-600");
	width: to-rem(200px);
	z-index: z("fixed");

	&.hidden {
		display: none;
	}

	h3 {
		border-block-end: b("charcoal-600");
		color: color("white");
		cursor: pointer;
		display: flex;
		font-size: fs("md");
		font-weight: normal;
		letter-spacing: to-rem(1.2px);
		margin: 0;
		padding: p("sm");
		position: relative;
		text-transform: uppercase;
		transition: t(color, "link");

		&:hover,
		&:active {
			color: color("primary");
		}

		.players-mode {
			color: inherit;
			flex: 1 1 auto;
			font-size: fs("lg");
			text-align: right;
			position: relative;
		}

		i {
			position: relative;

			&:first-of-type {
				margin-inline-end: m("sm");
			}

			&:last-of-type {
				margin-inline-start: m("sm");
			}
		}
	}

	ol {
		list-style: none;
		padding: p("sm");
		position: relative;

		.player {
			align-items: center;
			display: flex;
			padding: p(xs) 0;
			position: relative;
			width: 100%;
		}

		.player-name {
			@include ellipsis;
			color: color("white");
			flex: 1 1 auto;
			position: relative;

			&.self {
				color: color("white");
			}
		}

		.player-active {
			@include size(to-rem(8px));
			border-radius: 50%;
			flex: 0 0 auto;
			margin-inline-end: m("sm");
			position: relative;

			&.active {
				box-shadow: 0 1px 2px 0 color("black", 0.3);
			}
		}
	}
}

// Player Config
#player-config {
	.avatar {
		@extend %image-reset;
		@include size(space("image"));
		cursor: pointer;
		transition: t(background box-shadow, "link");

		&:hover {
			@extend %global-hover;
		}

		&:focus {
			@extend %global-focus;
		}
	}

	.form-group.stacked {
		label {
			margin-inline-start: m("sm");

			#available-characters {
				padding-block-start: p("base");
			}
		}

		.directory-list {
			padding-block-start: 0;

			+ button {
				@extend %button-row;
			}
		}
	}

	.directory-item {
		&.context {
			@extend %global-active;
		}
	}
}

// Hotbar
#hotbar {
	@include fixed(bottom space("md") left to-rem(248px));
	display: flex;
	pointer-events: none;
	z-index: z("fixed");

	#action-bar {
		display: block;
		flex: 1 1 auto;
		pointer-events: all;
		position: relative;
	}

	#macro-list {
		display: flex;
		float: left;
		list-style: none;
		margin: 0;
		padding: 0;
		position: relative;
	}

	.bar-controls {
		@include size(to-rem(40px), to-rem(56px));
		border: b("charcoal-600");
		display: flex;
		flex-direction: column;
		position: relative;

		&:first-child {
			flex: 0 0 auto;
			flex-direction: column-reverse;
			margin-inline-end: m(sm);

			#macro-directory,
			#bar-toggle {
				flex: 1 1 auto;

				&:first-of-type {
					border: none;
					border-radius: 0;
				}

				&:last-of-type {
					border-block-start: none;
					border-block-end: b("charcoal-600");
					border-radius: 0;
				}
			}
		}

		&:last-child {
			float: left;
			margin-inline-start: m(sm);
		}

		.page-control,
		#macro-directory,
		#bar-toggle {
			align-items: center;
			background: color("charcoal-500", 0.8);
			color: color("white");
			cursor: pointer;
			display: flex;
			flex: 0 0 auto;
			justify-content: center;
			position: relative;
			transition: t(box-shadow, "link");

			&:hover {
				@extend %global-hover;
			}

			&:focus {
				@extend %global-focus;
			}

			&:first-of-type {
				border-block-end: b("charcoal-600");
			}

			&:last-of-type {
				border-block-start: b("charcoal-600");
			}
		}

		.page-number {
			background: color("charcoal-500", 0.5);
			color: color("white");
			display: flex;
			flex: 1 1 auto;
			justify-content: center;
		}
	}

	.macro {
		@include size(to-rem(56px));
		align-items: center;
		background: color("charcoal-500", 0.8);
		border: b("charcoal-600");
		border-inline-end: none;
		color: color("white");
		cursor: pointer;
		display: flex;
		justify-content: center;
		position: relative;
		transition: t(border box-shadow, "link");

		&:first-of-type {
			border-top-left-radius: br("sm");
			border-bottom-left-radius: br("sm");
		}

		&:last-of-type {
			border-top-right-radius: br("sm");
			border-bottom-right-radius: br("sm");
			border-inline-end: b("charcoal-600");
		}

		&:hover {
			@extend %global-hover;
		}

		&:focus {
			@extend %global-focus;
		}

		&.active {
			@extend %global-active;
			background: color("charcoal-500", 0.8);
		}

		.macro-key {
			@include absolute(top space(xs) right space(base));
			color: color("white");
			font-weight: 600;
			text-shadow: 2px 2px  2px color("charcoal-900");
			z-index: 1;
		}

		.macro-icon {
			border: none;
			max-height: 100%;
			max-width: 100%;
			object-fit: cover;
			object-position: 50% 50%;
			position: relative;
		}

		.tooltip {
			@include absolute(bottom 100% left 0);
			background: color("charcoal-900", 0.5);
			color: color("white");
			font-size: fs("md");
			margin-block-end: m("base");
			padding: p("xs");
			max-width: 200%;
		}
	}
}

// Macros Popout
#macros-popout {
	// because why not use this markup here...
	.sidebar-tab {
		display: flex;
	}
}

// Macro Sheet
.macro-sheet {
	.form-group.command {
		align-items: flex-start;
		flex: 1 1 auto;
		flex-direction: column;
		margin-block-end: m("sm");

		label {
			flex: 0 0 auto;
			margin-block-end: m("base");
			padding-inline-start: p("sm");
		}

		textarea {
			flex: 1 1 auto;
			font-family: Consolas, "Liberation Mono", Courier, monospace;
			line-height: 1.5;
			white-space: pre-wrap;
		}
	}

	.sheet-footer {
		border-block-start: b("charcoal-600");
		display: flex;
		flex: 0 0 auto;
		margin-inline-start: -(m("sm"));
		padding: 0 p("sm");
		padding-block-start: p("sm");
		width: calc(100% + #{space("md")});

		button {
			@extend %button-row;
		}
	}
}

// Pause
#pause {
	@include fixed(bottom to-rem(200px) left 0);
	@include size(100%, auto);
	align-items: center;
	display: none;
	flex-direction: column;
	pointer-events: none;

	&.paused {
		display: flex;
	}

	&::before {
		@keyframes pause-rotation-before {
			0% { transform: rotate(0deg); }
			100% { transform: rotate(-360deg); }
		}

		@include absolute(top 50% left 50%);
		@include size(to-rem(120px));
		animation-duration: 5s;
		animation-iteration-count: infinite;
		animation-name: pause-rotation-before;
		animation-timing-function: linear;
		background: color("primary");
		border-radius: 50%;
		box-shadow:
			inset 0 0 0 4px color("white"),
			0 0 0 4px color("primary");
		content: "";
		margin-block-start: to-rem(-60px);
		margin-inline-start: to-rem(-60px);
	}

	img {
		@keyframes pause-rotation {
			0% { transform: rotate(0deg); }
			100% { transform: rotate(360deg); }
		}

		@include absolute(top 50% left 50%);
		@include size(to-rem(100px));
		animation-duration: 5s;
		animation-iteration-count: infinite;
		animation-name: pause-rotation;
		animation-timing-function: linear;
		margin-block-start: to-rem(-50px);
		margin-inline-start: to-rem(-50px);
	}

	h3 {
		margin-block-start: to-rem(160px);
		text-shadow: 1px 1px 4px color("black");
	}
}

// Sidebar Chat
#chat-log {
	flex: 1 1 auto;
	min-height: to-rem(1px);
	overflow-x: hidden;
	overflow-y: auto;
	padding: 0 p("sm");

	.message {
		background: color("charcoal-50");
		border: b("charcoal-100");
		border-radius: br("sm");
		color: color("default-text");
		display: flex;
		flex-direction: column;
		font-size: fs("md");
		margin-block-end: m("base");

		&:first-child {
			margin-block-start: m("sm");
		}

		&:last-child {
			margin-block-end: m("sm");
		}

		&.whisper {
			background: color("orange-50");
			border: b("orange-100");
		}

		&.blind {
			background: color("purple-50");
			border: b("purple-100");
		}

		.message-header {
			align-items: center;
			background: color("charcoal-100", 0.5);
			border-block-end: b("charcoal-300", 0.8);
			display: flex;
			flex-wrap: wrap;
			padding: p("sm");

			.message-sender {
				@include ellipsis;
				color: color("default-text");
				flex: 1 1 auto;
				font-size: fs("md");
			}

			.message-metadata {
				align-items: center;
				display: flex;
			}

			.flavor-text,
			.whisper-to {
				flex: 0 0 100%;
				font-size: fs("md");
				padding-block-start: p("base");
			}

			.message-timestamp {
				color: color("default-text");
				font-size: fs("xs");
			}

			.message-delete {
				@extend %control-button;
			}
		}

		.message-content {
			color: color("default-text");
			font-size: fs("md");
			padding: p("sm");
			-webkit-user-select: text;
			-moz-user-select: text;
			-ms-user-select: text;
			user-select: text;
		}
	}
}

#chat-controls {
	align-items: center;
	background: color("charcoal-500", 0.5);
	border-block-start: b("charcoal-600");
	color: color("white");
	display: flex;
	flex: 0 0 auto;
	padding: p("sm");
	position: relative;

	.roll-type-select {
		align-items: center;
		display: flex;
		flex: 1 1 auto;

		.fas.fa-dice-d20 {
			display: none;
		}

		select {
			background: color("charcoal-500", 0.5);
			color: color("white");
			height: to-rem(32px);
		}
	}

	.control-buttons {
		align-items: center;
		display: flex;
		flex: 0 0 auto;

		.button {
			@extend %control-button;
		}
	}
}

#chat-form {
	align-items: center;
	background: color("charcoal-500", 0.5);
	border-block-start: b("charcoal-600");
	color: color("white");
	display: flex;
	flex: 0 0 auto;
	height: to-rem(112px);
	padding: p("sm");
	position: relative;

	textarea {
		@include size(100%);
		background: color("white", 0.9);
		color: color("default-text");
		resize: none;
	}
}

// Sidebar Combat
#combat {
	#combat-round {
		@extend %panel-header;
		flex-direction: column;

		.encounters {
			align-items: center;
			display: flex;
			width: 100%;

			+ .encounters {
				margin-block-start: m("base");
			}

			h3,
			h4 {
				align-items: center;
				border-block-end: none;
				color: color("gray-200");
				display: flex;
				flex: 1 1 auto;
				font-size: fs("md");
				font-weight: normal;
				justify-content: center;
			}

			h3 {
				color: color("white");
				font-size: fs("xl");
			}

			a {
				@extend %control-button;

				&[disabled] {
					pointer-events: none;
					visibility: hidden;
				}

				&:first-child {
					margin-inline-start: 0;
				}
			}
		}
	}

	#combat-tracker {
		padding-block-start: p("base");

		.combatant {
			align-items: center;
			background: color("charcoal-600");
			border-radius: br("sm");
			display: flex;
			margin: m("base") m("sm");
			padding: p("base") p("sm");
			position: relative;
			transition: t(background box-shadow opacity, "link");

			&:hover {
				@extend %global-hover;
			}

			&.hidden {
				.token-name h4,
				.token-image {
					opacity: 0.5;
				}
			}

			&.active {
				@extend %global-active;

				.combatant-control.active {
					background: color("white");
					color: color("primary");
				}
			}

			&.defeated {
				background: color("red-600", 0.5);

				&.active {
					.combatant-control.active {
						background: color("primary");
						color: color("white");
					}
				}
			}

			.token-image {
				@include size(space("icon"));
				flex: 0 0 auto;
				margin-inline-end: m("sm");
				position: relative;
			}

			.token-name {
				display: flex;
				flex: 1 1 auto;
				flex-direction: column;
				overflow: hidden;
				position: relative;

				h4 {
					@include ellipsis(max-width 100%);
					color: color("white");
					font-size: fs("lg");
					font-weight: normal;
				}
			}

			.token-resource,
			.token-initiative {
				align-items: center;
				color: color("white");
				display: flex;
				flex: 0 0 auto;
				position: relative;
			}

			.token-resource {
				font-size: fs("md");
				margin-inline-start: m("base");
				padding-inline-end: p("md");
			}

			.token-initiative {
				border-inline-start: b("white");
				padding-inline-start: p("md");

				.initiative {
					color: inherit;
					font-size: fs("lg");
				}
			}

			.combatant-controls {
				align-items: center;
				display: flex;
			}

			.combatant-control {
				@extend %control-button;
				margin-inline-start: 0;
				margin-inline-end: m("base");

				// fa hack
				&.roll {
					@include size(space("button"));
					font-family: "Font Awesome 5 Free";
					font-weight: 900;
					-webkit-font-smoothing: antialiased;
					font-size: fs("xl");
					font-style: normal;
					font-variant: normal;
					text-rendering: auto;
					line-height: 1;
					margin: 0;

					&::before {
						content: "\f6cf";
					}
				}
			}

			.token-effects {
				display: flex;
				flex: 1 1 auto;
				flex-wrap: wrap;
				margin-inline-start: m("base");

				img {
					margin-block-end: m("base");
					margin-inline-end: m("base");
					max-height: to-rem(14px);
					max-width: to-rem(14px);
				}
			}
		}
	}

	#combat-controls {
		border-block-start: b("charcoal-600");
		padding-block-start: m("sm");

		.combat-control {
			@extend %primary-button;
			flex: 1 1 auto;
			margin-inline-start: m("base");

			&:first-child {
				margin-inline-start: 0;
			}

			&.center {
				flex: 1 1 50%;
			}
		}
	}
}

// Sidebar Scenes Directory
#scenes {
	.scene {
		background-image: none !important;
	}
}

// Sidebar Playlist
#playlists {
	color: color("white");

	.directory-list {
		padding-block-start: 0;
		position: relative;

		> .playlist:first-child {
			background: color("charcoal-500", 0.5);
			border-block-end: b("charcoal-600");
			color: color("white");
			display: flex;
			flex: 0 0 auto;
			flex-direction: column;
			padding: p("sm");
			position: relative;

			.playlist-header {
				background: transparent;
				border-block-end: b("charcoal-600");
				color: color("white");
				font-size: fs("xl");
				padding-inline-start: 0;
				pointer-events: none;
				width: 100%;

				h4 {
					padding-inline-start: 0;
				}
			}

			.playlist-sounds {
				background: transparent;
				border-inline-start: none;
				padding: 0;
				padding-block-start: p("sm");

				h4 {
					border-block-end: 0;
					color: color("white");
					font-size: fs("lg");
					font-weight: normal;
					margin: 0;
				}

				.sound {
					border-block-end: 0;
					flex-wrap: nowrap;
					padding-inline-start: 0;
					padding-inline-end: 0;

					&:last-of-type {
						padding-block-end: 0;
					}

					.global-volume {
						flex: 0 0 50%;
					}
				}
			}
		}
	}

	li.playlist {
		display: block;
		padding: p("sm");
		padding-block-end: 0;
		position: relative;

		&.collapsed {
			.playlist-header {
				border-inline-start: none;
				border-bottom-left-radius: br("sm");
				border-bottom-right-radius: br("sm");
			}

			.playlist-sounds {
				display: none;
			}
		}

		.playlist-header {
			align-items: center;
			background: color("charcoal-200");
			color: color("default-text");
			cursor: pointer;
			border-top-left-radius: br("sm");
			border-top-right-radius: br("sm");
			display: flex;
			min-height: to-rem(32px);
			padding: p("base") p("sm");
			position: relative;
			transition: t(background box-shadow color, "link");

			&:hover {
				background: color("primary");
				box-shadow: inset 0 0 0 2px color("white");
				color: color("white");
			}

			&:focus {
				box-shadow:
					inset 0 0 0 2px color("primary"),
					inset 0 0 0 3px color("white"), 0 1px 2px 0 color("black", 0.3);
			}

			h4 {
				@include ellipsis;
				border-block-end: 0;
				color: inherit;
				cursor: pointer;
				display: block;
				flex: 1 1 auto;
				font-size: fs("lg");
				font-weight: normal;
				margin: 0;
				padding-inline-start: p("md");
				position: relative;

				i.fa {
					@include absolute(top 50% left 0);
					color: inherit;
					margin-block-start: to-rem(-8px);
				}
			}

			.sound-control {
				color: color("white");
				transition: t(color, "link");

				&:hover {
					color: color("primary");
				}
			}
		}

		.playlist-sounds {
			background: color("charcoal-100");
			padding: 0;
			position: relative;

			.sound {
				align-items: center;
				border-block-end: b("charcoal-600");
				display: flex;
				flex-wrap: wrap;
				padding: p("base") p("sm");
				position: relative;

				h4 {
					@include ellipsis;
					color: color("default-text");
					flex: 1 1 auto;
					font-size: fs("lg");
					font-weight: normal;
					margin: 0;
				}
			}
		}

		.playlist-controls {
			display: flex;
		}

		.sound-controls {
			align-items: center;
			display: flex;
			flex: 0 0 100%;
			position: relative;

			input {
				flex: 1 1 100%;
				margin-inline-end: m("base");
				position: relative;
			}
		}

		.sound-control {
			@extend %control-button;
			color: color("default-text");
			margin-inline-start: 0;
			margin-inline-end: m("xs");
			position: relative;

			&:last-child {
				margin-inline-end: 0;
			}

			&.disabled {
				color: color("gray-100");
				display: none;
				pointer-events: none;
			}

			&.inactive {
				color: color("gray-500");
			}

			.fa-play {
				color: color("positive");
			}

			.fa-square {
				color: color("negative");
			}
		}
	}
}

// Sidebar Settings
#settings {
	padding: p("sm");

	h2,
	h4 {
		color: color("white");
		font-weight: normal;
		margin-block-end: m("sm");
	}

	h2 {
		border-block-end: b("charcoal-600");
		margin-block-start: m("lg");
	}

	h4 {
		color: color("primary");
	}

	button {
		@extend %button-row;
	}
}

// Window App - Main Modal
.window-app {
	background: color("charcoal-50");
	border: b("charcoal-600");
	box-shadow: 0 2px 4px color("black");
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	max-height: 80vh;
	position: absolute;
	z-index: z("modal");

	.window-header {
		align-items: center;
		background: color("charcoal-600");
		border-bottom: b("charcoal-600");
		color: color("white");
		display: flex;
		flex: 0 0 auto;
		overflow: hidden;
		padding: p("sm");
		position: relative;

		h4 {
			@include ellipsis(max-width 100%);
			color: color("white");
			flex: 1 1 auto;
			font-weight: normal;
			position: relative;
		}

		a {
			@extend %control-button;
			padding: p("base");
			width: auto;

			&.close {
				color: transparent;
				overflow: hidden;
				padding: 0;
				width: space("button-sm");

				i {
					@include absolute(top 0 left 0);
					@include size(100%);
					align-items: center;
					color: color("white");
					display: flex;
					font-size: fs("lg");
					justify-content: center;
				}
			}

			> i {
				margin-inline-end: m("base");
			}
		}
	}

	.window-content {
		background: transparent;
		color: color("default-text");
		flex: 1 1 auto;
		font-size: fs("md");
		overflow: hidden;
		padding: 0;
		position: relative;

		> form {
			display: flex;
			flex: 1 1 auto;
			flex-direction: column;
			height: 100%;
			padding: p("sm");
			position: relative;

			.form-header {
				border-block-end: b("primary", 2px);
				font-family: "Signika", sans-serif;
				margin-block-start: m("lg");
				margin-block-end: m("sm");
				padding: 0  p("sm");

				+ .notes {
					padding: 0  p("sm");
				}
			}

			hr {
				display: none;
			}
		}
	}

	.window-resizable-handle {
		@include absolute(bottom 0 right 0);
		@include size(to-rem(20px));
		align-items: center;
		background: color("charcoal-800");
		border: none;
		border-top-left-radius: br("sm");
		color: color("white");
		cursor: pointer;
		display: inline-flex;
		font-size: fs("md");
		justify-content: center;
		margin: 0;
		transition: t(background box-shadow, "link");

		&:hover {
			@extend %global-hover;
		}

		&:focus {
			@extend %global-focus;
		}

		> i {
			transform: rotate(45deg);
		}
	}
}

// Window App - Sheets
.sheet {
	.sheet-header {
		display: flex;
		position: relative;

		> img {
			@include size(to-rem(40px));
			border: none;
			cursor: pointer;
			flex: 0 0 auto;
			margin-inline-end: m("sm");
			object-fit: cover;
			object-position: 50% 50%;
			position: relative;

			&:hover {
				@extend %global-hover;
			}

			&:focus {
				@extend %global-focus;
			}
		}

		> h1 {
			flex: 1 1 auto;

			input {
				@include size(100%, to-rem(40px));
				background: color("charcoal-300", 0.2);
				flex: 0 0 auto;
				font-size: fs("xxl");
			}
		}
	}

	.sheet-tabs,
	.sheet-navigation {
		@extend %modal-tabs;
	}
}

// Journal Sheet
.journal-sheet {
	form {
		input[name="name"] {
			@include size(100%, auto);
			background: color("charcoal-300", 0.2);
			flex: 0 0 auto;
			font-size: fs("xxl");
			padding: p("sm");
			position: relative;
		}

		select {
			@include size(100%, auto);
			background: color("charcoal-300", 0.1);
			flex: 0 0 auto;
			font-size: fs("lg");
			margin-block-start: m("base");
			position: relative;

			+ .editor {
				margin-block-start: m("sm");
			}
		}

		.editor {
			background: color("white", 0.5);
			border-block-start: b("charcoal-600");
			border-block-end: b("charcoal-600");
			flex: 1 1 auto;
			height: 1px; // hack
			margin-left: -(m("sm"));
			position: relative;
			width: calc(100% + #{to-rem(16px)}); // add padding

			.editor-content {
				height: 100%;
				overflow-x: hidden;
				overflow-y: auto;
				padding: p("md");
				position: relative;
			}

			.editor-edit {
				@extend %primary-button;
				@include absolute(top space("md") right space("md"));
				@include size(to-rem(32px));
				font-size: fs("lg");
				padding: 0;

				i {
					margin-inline-start: m("base");
				}
			}

			+ button {
				@extend %button-row;
			}
		}
	}
}

// Context Menu
#context-menu {
	@include absolute(left 0);
	background: color("charcoal-50");
	border: b("charcoal-600");
	border-radius: br("sm");
	color: color("default-text");
	max-width: to-rem(320px);
	min-width: to-rem(152px);
	width: 100%;
	z-index: z("popover");

	&.expand-down {
		top: calc(100% + #{to-rem(2px)});
		bottom: auto;
	}

	&.expand-up {
		bottom: calc(100% + #{to-rem(2px)});
		top: auto;
	}

	ol.context-items {
		list-style: none;
		margin: 0;
		padding: 0;

		.context-item {
			cursor: pointer;
			padding: p("base");

			&:hover {
				background: color("primary");
				color: color("white");
			}

			> i {
				margin-inline-end: m("base");
			}
		}
	}

	.window-app & {
		z-index: 101; // hmm
	}
}

// Dialog
.dialog {
	div.dialog-content {
		padding: 0 p("sm");

		p:first-child {
			margin-block-start: m("sm");
		}
	}

	form.dialog-content {
		padding-block-start: p("md");
	}
}

.dialog-content {
	color: color("default-text");
	font-size: fs("lg");
	padding: p("sm");

	> p + .form-group {
		margin-block-start: m("sm");
	}

	> .form-group {
		padding: 0;

		+ .dialog-buttons {
			padding: 0;
			padding-block-start: p("sm");
		}
	}

	> h3 {
		margin-block-start: 0;
	}
}

.dialog-buttons {
	display: flex;
	padding: p("sm");

	.dialog-button {
		@extend %primary-button;
		flex: 1 1 auto;
		margin-inline-start: m("sm");

		&:first-child {
			margin-inline-start: 0;
		}
	}
}

#short-rest-hd {
	.form-group {
		padding: p("sm");

		select {
			flex: 1 1 auto;
		}

		button {
			flex: 0 0 auto;
		}
	}
}

// Editor
.editor-content * {
	-webkit-user-select: text;
	-moz-user-select: text;
	-ms-user-select: text;
	user-select: text;
}

// Filepicker
.filepicker {
	display: flex;
	flex-direction: column;

	.filepicker-header {
		display: flex;
		flex: 0 0 auto;
		flex-direction: column;
		position: relative;

		.tabs {
			@extend %modal-tabs;
		}

		.units {
			align-items: center;
			display: inline-flex;
			flex: 0 0 auto;
			font-size: fs("md");
			margin-inline-start: m("base");
		}
	}

	.filepicker-body {
		min-height: to-rem(200px);
		overflow-y: auto;
		position: relative;

		&.private {
			@extend %global-focus;

			.current-dir button.privacy {
				@extend %global-active;
			}
		}

		&.thumbs {
			.file {
				align-items: center;
				display: flex;
				padding: p("base");

				img {
					margin-inline-end: m("base");
					max-width: space("icon");
					max-height: space("icon");
				}
			}
		}

		&.tiles {
			.files-list {
				display: flex;
				flex-wrap: wrap;
			}

			.file {
				@include size(to-rem(98px));
				align-items: center;
				background: transparent;
				border: none;
				display: flex;
				flex: 0 0 auto;
				justify-content: center;
				padding: p("base");

				img {
					max-width: to-rem(86px);
					max-height: to-rem(86px);
				}
			}
		}

		&.images {
			.file {
				display: flex;
				justify-content: center;
				padding: p("base");

				.filename {
					@include absolute(top space("sm") left space("base"));
					@include ellipsis(max-width 100%);
					display: block;
					color: color("white");
					font-size: fs("md");
				}

				img {
					max-width: to-rem(100%);
					max-height: to-rem(200px);
				}
			}
		}

		.file {
			img {
				@extend %image-reset;
			}
		}
	}

	section.filepicker-body {
		display: flex;
		flex: 1 1 auto;
		flex-direction: column;
		margin-block-start: m("sm");
		overflow: hidden;
		position: relative;
	}

	.filepicker-footer {
		flex: 0 0 auto;
		margin-block-start: m("sm");
		position: relative;

		&:empty {
			display: none;
		}

		.form-group {
			&:last-of-type {
				border-block-end: b("charcoal-600");
			}

			&:only-child {
				border-block-end: 0;
			}
		}

		> button[type="submit"] {
			@extend %button-row;
			flex: 1 1 auto;
			margin-block-start: m("sm");
		}
	}

	.current-dir {
		button {
			@extend %primary-button;
			@extend %button-row;
			flex: 0 0 auto;
			width: auto;

			+ .form-fields {
				margin-inline-start: m("base");
			}

			> i {
				margin-inline-end: 0;
			}
		}

		input {
			flex: 1 1 auto;
			height: to-rem(32px);
			position: relative;

			&:last-child {
				margin-inline-end: 0;
			}
		}
	}

	.display-modes {
		.display-mode {
			@extend %primary-button;
			flex: 1 1 auto;
			margin-inline-start: m("base");
			width: auto;

			&:first-child {
				margin-inline-start: 0;
			}

			&.active {
				background: color("primary");
				color: color("white");
			}
		}
	}

	.directory {
		min-height: to-rem(32px);
		list-style: none;
		overflow-x: hidden;
		overflow-y: auto;
		position: relative;

		+ .directory {
			margin-block-start: m("base");
		}

		.dir,
		.file {
			@include ellipsis;
			cursor: pointer;
			display: block;
			font-size: fs("md");
			line-height: to-rem(32px);
			padding: 0 p("sm");
			position: relative;
			transition: t(background box-shadow color, "link");

			&:last-child {
				border-block-end: 0;
			}

			&:hover {
				background: color("primary");
				box-shadow: inset 0 0 0 2px color("white");
				color: color("white");
			}

			&:focus {
				box-shadow:
					inset 0 0 0 2px color("primary"),
					inset 0 0 0 3px color("white"), 0 1px 2px 0 color("black", 0.3);
			}

			> i {
				margin-inline-end: m("base");
			}
		}

		.dir {
			background: color("charcoal-200", 0.9);
			border-block-end: b("charcoal-600");
			color: color("default-text");
		}

		.file {
			background: color("charcoal-600", 0.9);
			border-block-end: b("charcoal-600");
			color: color("white");
		}
	}
}

// Basic Folder Defaults
#actor-flags,
#combat-config,
#folder-edit,
#light-config,
#note-config,
#permission,
#player-config,
#sheet-config,
#sound-config,
#template-config,
#tile-config,
#track-config,
#trait-selector,
#wall-config,
.sheet.scene-sheet {
	form {
		overflow-x: hidden;
		overflow-y: auto;

		.form-group:last-of-type {
			margin-block-end: m("md");
		}

		> button[type="submit"] {
			border-radius: 0;
			box-shadow:
				0 0 0 8px color("charcoal-50"),
				0 0 0 9px color("charcoal-500", 0.5);
			bottom: 0;
			position: sticky;

			&:hover {
				box-shadow:
					inset 0 0 0 2px color("white"),
					0 0 0 8px color("charcoal-50"),
					0 0 0 9px color("charcoal-500", 0.5);
			}

			&:focus {
				box-shadow:
					inset 0 0 0 2px color("primary"),
					inset 0 0 0 3px color("white"),
					0 0 0 8px color("charcoal-50"),
					0 0 0 9px color("charcoal-500", 0.5);
			}
		}
	}
}

// Drawing Config
// Light Config
#drawing-config,
#light-config {
	form {
		input[type="color"][data-edit][data-edit] {
			flex: 1 1 25%;
			margin-inline-start: m("base");
		}
	}
}

// Drawing Config
#drawing-config {
	form {
		.sheet-tabs {
			border-block-end: b("orange-700", 2px);
			flex: 0 0 auto;
		}

		> .tab {
			border-block-end: b("charcoal-600");
			display: none;
			flex: 1 1 auto;
			flex-direction: column;
			margin-block-end: m("sm");
			padding-block-start: p("sm");
			overflow-x: hidden;
			overflow-y: auto;

			&.active {
				display: flex;
			}
		}

		.sheet-footer {
			display: flex;

			button {
				@extend %button-row;
			}
		}
	}
}

// Folder Edit
#folder-edit {
	// fucking stupid, how many ways can you layout a form?
	label + .flexrow {
		display: flex;
		flex: 1 1 auto;
	}
}

// Grid Config
#grid-config {
	.form-group:last-of-type {
		background: transparent;
		border-block-start: b("charcoal-600");
		flex-wrap: nowrap;
		margin-block-start: m("sm");

		button {
			@extend %button-row;
		}
	}

	.form-fields {
		label {
			flex: 0 0 auto;

			&:last-of-type {
				padding-inline-start: p("md");
			}
		}
	}
}

// Permission Config
#permission {
	#permission-control hr {
		@include size(100%, auto);
		border-block-end: b("charcoal-600");
		margin: 0;
		margin-block-end: m("sm");
		position: relative;
	}
}

// Trait Selector
#trait-selector {
	.trait-list {
		li {
			align-items: center;
			display: flex;
			font-size: fs("lg");

			&:nth-of-type(even) {
				background: color("charcoal-300", 0.1);
			}

			label {
				align-items: center;
				color: color("default-text");
				cursor: pointer;
				display: flex;
				padding: p("base");
				width :100%;

				input {
					margin-inline-end: m("base");
				}
			}
		}
	}

	.form-group.stacked {
		label {
			flex: 0 0 100%;

			+ input {
				margin-block-start: m("base");
			}
		}
	}
}

// General dice roll
.dice-roll {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-around;
	position: relative;

	.dice-result,
	.dice-tooltip {
		flex: 0 0 100%;
		position: relative;
	}

	.dice-formula,
	.dice-total {
		background: color("charcoal-400");
		border: b("charcoal-600");
		color: color("white");
		cursor: pointer;
		flex: 0 0 100%;
		padding: p("base");
		position: relative;
		text-align: center;
		word-break: break-all;
	}

	.dice-formula {
		border-block-end: none;
	}

	.dice-total {
		background: color("charcoal-300");
		font-size: fs("xl");

		&.success {
			color: color("positive");
		}

		&.failure {
			color: color("negative");
		}
	}

	.dice-tooltip {
		display: none;
	}
}

.dice-tooltip {
	background: color("charcoal-200");
	border-block-start: b("charcoal-600");
	border-inline-start: b("charcoal-300");
	border-inline-end: b("charcoal-300");
	cursor: pointer;
	position: relative;

	+ .dice-tooltip {
		border-block-start: b("charcoal-300");
	}

	.dice {
		display: flex;
		flex-direction: column;
		position: relative;

		.part-formula {
			align-items: center;
			border-block-end: b("charcoal-300");
			display: none;
			padding: p("base") p("sm");
			position: relative;

			.part-total {
				background: color("charcoal-300");
				color: color("white");
				flex: 0 0 auto;
				margin-inline-start: m("sm");
				padding: 0 p("base");
				position: relative;
			}
		}

		.dice-rolls {
			background: color("charcoal-50");
			display: flex;
			flex-wrap: wrap;
			list-style: none;
			overflow: hidden;
			padding: 0 p("sm");
			padding-block-start: p("sm");
			padding-block-end: p("base");
			position: relative;

			.roll {
				@include size(to-rem(24px));
				align-items: center;
				background-repeat: no-repeat;
				background-size: 24px 24px;
				display: flex;
				flex: 0 0 auto;
				font-weight: 600;
				font-size: fs("lg");
				justify-content: center;
				margin-inline-end: m("base");
				margin-block-end: m("base");
				position: relative;

				&.min {
					color: color("red-700");
					filter: sepia(0.5) hue-rotate(-60deg);
				}

				&.max {
					color: color("green-700");
					filter: sepia(0.5) hue-rotate(60deg);
				}

				&.discarded,
				&.rerolled {
					filter: sepia(0.5) contrast(0.75) opacity(0.75);
				}
			}
		}
	}
}

// General Tabs
.tab[data-tab] {
	display: none;

	&.active {
		display: flex;
	}
}

// end vtt wrapper
}
